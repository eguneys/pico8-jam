pico-8 cartridge // http://www.pico-8.com
version 29
__lua__

dbg = ""

function update_smoke(s)
   s.t += 2

   if s.t == 30 then
      destroy_object(s)
   end
end

function draw_smoke(s)
   spr(54 + flr((s.t % 30 / 30) * 4), s.x, s.y)
end

function init_smoke(s)
end

smoke = {
   t=0,
   init=init_smoke,
   update=update_smoke,
   draw=draw_smoke
}

function update_text(t)
   t.t += 1

   t.y -= 0.5

   if t.t == 15 then
      destroy_object(t)
   end
end

function draw_text(t)
   print("gold", t.x, t.y, tcolors[flr(t.t / 15 * 4) + 1])
end

function init_text(t)
   sfx(1)
end

tcolors = {2,7,8,9}

text = {
   t=0,
   init=init_text,
   update=update_text,
   draw=draw_text
}

function update_treasure(t)
   local p = player.li
   if t.x == p.x + p.dx * 4 and
      t.y == p.y + p.dy * 4 then
         init_undo(undo_hunt, {x=t.x,y=t.y,sp=t.sp})
         init_object(text, t.x, t.y)
         destroy_object(t)
   end
end

function draw_treasure(t)
   spr(t.sp, t.x, t.y)
end

function init_treasure(t, sp)
   t.sp = sp
end

treasure={
   t=0,
   init=init_treasure,
   update=update_treasure,
   draw=draw_treasure
}


-- ⬆️⬇️⬅️➡️❎🅾️
function update_player(p)

   local input_x = 0
   local input_y = 0
   
   if btnp(⬆️) then
      input_y = -1
   elseif btnp(⬇️) then
      input_y = 1
   end

   if btnp(⬅️) then
      input_x = -1
   elseif btnp(➡️) then
      input_x = 1
   end

   if p.dx == 0 and p.dy == 0 then
      if input_x != 0 then
         if is_edge(p, input_x, 0) or
         is_solid(p, input_x, 0) then
            p.dx = input_x
            p.btimer = 2
         else
            p.dx = input_x
            p.mtimer=4
         end
      elseif input_y != 0 then
         if is_edge(p, 0, input_y) or
         is_solid(p, 0, input_y) then
            p.dy = input_y
            p.btimer = 2            
         else
            p.dy = input_y
            p.mtimer=4
         end
      end
   end

   if p.btimer > 0 then
      p.btimer -= 1
      p.t += 1
      p.x += p.dx * 2
      p.y += p.dy * 2
      if p.btimer == 0 then
         sfx(5)
         p.x -= p.dx * 2 * 2
         p.y -= p.dy * 2 * 2
         p.dx = 0
         p.dy = 0
      end
   end

   if p.utimer > 0 then
      p.utimer -= 1
      p.t -= 2
      p.x -= p.dx * 2
      p.y -= p.dy * 2

      if p.utimer == 0 then
         p.dx = 0
         p.dy = 0
      end
   end

   if p.mtimer > 0 then
      p.mtimer -= 1
      p.t += 2
      p.x += p.dx * 2
      p.y += p.dy * 2
      if p.mtimer == 2 then
         init_object(smoke, p.x-p.dx*4, p.y-p.dy*4)
      end
      if p.mtimer == 0 then
         init_undo(undo_move, {dx=p.dx,dy=p.dy})
         sfx(0)
         p.dx = 0
         p.dy = 0
      end
   end
   p.t += 0.5

   if p.dx != 0 then
      p.s = 1
   elseif p.dy < 0 then
      p.s = 17
   elseif p.dy > 0 then
      p.s = 33
   end

   p.flipx = p.dx == 0 and p.flipx or p.dx < 0

   p.si = flr(p.t % 30 / 30 * 4)

end

function draw_player(p)
   spr(p.s + p.si, p.x, p.y, 1,1, p.flipx, p.flipy)
end

function init_player(p)
   
end

player = {
   t=0,
   x=0,
   y=0,
   dx=0,
   dy=0,
   mtimer=0,
   btimer=0,
   utimer=0,
   s=1,
   si=0,
   flipx=false,
   flipy=false,
   init=init_player,
   update=update_player,
   draw=draw_player
}

-->8

function init_object(type, x, y, m)
   local obj = {}

   merge(type, obj)

   type.li = obj

   obj.x = x
   obj.y = y

   obj.init(obj, m)

   add(objects, obj)

   return obj
end

function destroy_object(s)
   del(objects, s)
end

function load_room()
   objects = {}

   for i=0,15 do
      for j=0,15 do
         local t
         local m = mget(room.x+i,room.y+j)
         if m == 1 then
            t = player
         elseif m == 38 or m == 39 or m == 40 or m == 41 then
            t = treasure
         end

         if t then
            init_object(t,i*8,j*8, m)
         end
      end
   end
end

function undo_hunt(i)
   init_object(treasure,i.x,i.y,i.sp)
end

function undo_move(i)
   local p = player.li

   p.dx = i.dx
   p.dy = i.dy
   p.utimer=4
   sfx(6)
end

function init_undo(type, args)
   local u = {}
   merge(args, u)

   u.undo = type

   add(undos.last, u)
end

function undo()
   if #undos.all == 0 then
      return
   end

   local last = undos.all[#undos.all]

   for i in all(last) do
      i.undo(i)
   end

   del(undos.all, last)
end

function _init()

   r_t = 0

   undos = {
      last={},
      all={}
   }

   objects = {}   

   room = {}

   room.x = 16
   room.y = 0
   load_room()

end

function _update()

   if btn(🅾️) then
      r_t += 1
   else
      r_t = 0
   end

   if btnp(❎) then
      undo()
   end

   if r_t == 15 then
      r_t = -30
      load_room()
   end

   if #undos.last > 0 then
      add(undos.all, undos.last)
      undos.last = {}
   end

   for obj in all(objects) do
      obj.update(obj)
   end
end

function _draw()
   cls()

   map(0, 0, 0, 0, 16, 16, 1)

   map(room.x, room.y, 0, 0, 16, 16, 2)

   for obj in all(objects) do
      obj.draw(obj)
   end

   rectfill(0, 0, 128 * r_t/15, 128 * r_t/15, 1)

   if r_t > 5 then
      print("hold to restart", 40, 60, 7)
   end

   print(dbg, 8, 8, 4)
end


function is_edge(p, ox, oy)
   return p.x/8 + ox < 0 or p.x/8 + ox > 15 or
      p.y/8 + oy < 0 or p.y/8 + oy > 15
end

function is_solid(p, ox, oy)
   return solid_at(p.x / 8 + ox, p.y / 8 + oy)
end

function solid_at(x, y)
   return fget(mget(room.x + x, room.y + y), 1)
end

-->8

function merge(base, extend)
   for key,value in pairs(base) do
      extend[key] = value
   end
end

function appr(value, target, amount)
   if value < target then
      return min(value + amount, target)
   elseif value > target then
      return max(value - amount, target)
   else
      return target
   end
end

function lerp(value, target)
   return value + (target - value) * 0.1
end

__gfx__
000000000002e8000000000000000000000000000000000000556660006666000055550000555500000000000000000000000000000000000000000000000000
00000000022ee7700002e800000000000002e8000000000005666660666666600666665005666650000000000000000000000000000000000000000000000000
00700700288e5998022ee7700002e800022ee7700000000056666666666655656656666556656665000000000000000000000000000000000000000000000000
000770002e889988288e5998022ee770288e59980000000056665666666566656656656556666665000000000000000000000000000000000000000000000000
000770000e8888802e889988288e59982e8899880000000056566566566666656665666556665666000000000000000000000000000000000000000000000000
00700700228888800e8888802e8899880e8888800000000056666566566656656666666556556666000000000000000000000000000000000000000000000000
0000000022800280228888800e888880228888800000000005666660056666500666665006666666000000000000000000000000000000000000000000000000
00000000049004900249490022888880022828000000000000555500005555000666550000666600000000000000000000000000000000000000000000000000
00000000002222000000000000000000000000000000000011111111111111111111111111111111000000000000000000000000000000000000000000000000
0000000002e22e200022220000222200002222000000000011211221111112111281111111821111000000000000000000000000000000000000000000000000
0000000022e2e2e202e22e2002e22e2002e22e200000000018111281111111811221111111121111000000000000000000000000000000000000000000000000
0000000022e2e22222e2e2e022e2e2e202e2e2e20000000011111111111111111111111111111111000000000000000000000000000000000000000000000000
000000000882288028e8e88228e2e28228e2e2820000000012211111122111111111111111111111000000000000000000000000000000000000000000000000
00000000022882200822228208888880288888800000000018111211181111111111211111111211000000000000000000000000000000000000000000000000
00000000022002200e44eee0022222200eeee4400000000011111181111111111111281111111121000000000000000000000000000000000000000000000000
00000000044004400000044004400440044000000000000011111111111111111111111111111111000000000000000000000000000000000000000000000000
00000000008ee80000000000000000000000000000000000009a00000000ff00003600000000ff00000000000000000000000000000000000000000000000000
0000000008777780008ee80000000000008ee800000000000949a000000f4cc003446000000f4dd0000000000000000000000000000000000000000000000000
000000008879978e08777780008ee800087777800000000094749a0000fc4c4cb334360000fd4d4d000000000000000000000000000000000000000000000000
000000008e99998e8879978e087777808879978e00000000649999a00fcc7446b44734600fdd7446000000000000000000000000000000000000000000000000
000000000e8888808e99998e8879978e8e99998e000000000649744afc4ccc600b333346fd4ddd60000000000000000000000000000000000000000000000000
00000000e8eee8e00e8888808e99998e0e888880000000000069499ac47c460000b34743d47d4600000000000000000000000000000000000000000000000000
00000000e88008e0049ee8e00e8888800eeee49000000000000644900c446000000b34300d446000000000000000000000000000000000000000000000000000
000000000490049000000490e8eee8e004900000000000000000690000c600000000b30000d60000000000000000000000000000000000000000000000000000
00000000000000000028e00000000000000082000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000022000200288ee00008e0000000888200000000000067600000600000000000000000000000000000000000000000000000000000000000000000000
000000002882228200288e800ee88000000e88200000000000677776006776000006066000000000000000000000000000000000000000000000000000000000
0000000088888888002888e0ee88ee80008e82000000000067777777067777600007776000006700000000000000000000000000000000000000000000000000
0000000008ee88ee0028e800888888880e8882000000000077777766007777000067760000007600000000000000000000000000000000000000000000000000
0000000000088ee00288e0002822288208e882000000000006776000006766000000000000000000000000000000000000000000000000000000000000000000
000000000000e800028880000200022000ee88200000000000060000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000028000000000000000e82000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000200000000000000000000000000000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1919171919191717191819161919191906000000000000000000000000000006060000000000000600280000000000060600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919161719181717191919191919191900000000000000000000000000000000000029060000000000000029000029000000000606060600000606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919191917181716181818171718191900000000000000060000000000000000000000060000000600280000000000000000002626262600002626262600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919161817181816171816181819191800002929290000060000002626260000000000002900000000000000290000000000000606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1619181819181818181818181719191900002929290000060000002626260000000006060000000600280600060006000000000000262626262626000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919181817171719161916181819161800002929290000060000002626260000002900000000000000002700270027000000000000060606060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919181717181919161918181719191900000000000000000000000000000000000000000000000000060006000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919171618181816161818181619181900060606060600010000060606060600000000002800000100260026002600260000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1619181617181818181918171619191900000000000000000000000000000000000000000600000000000000000000060000000600000006000006000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1916171917181918181818181918161900000000000000060000000000000000000000002800002906000000062900000000060000060000060000060000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1918191919171818191817181819191900002828280000060000002727270000000000000000000000000000000600000000062729062729062729062729062700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1918171918171716171717181919161900002828280000060000002727270000002706270000000000002906000000000000062728062728062728062728062700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1918171618181818181818171719161900002828280000060000002727270000000000000000000600000600000000000000062728062728062728062728062700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919191818191819191916191719191900000000000000060000000000000000260626062600002906000000062900000000062729062729062729062729062700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919171917181819171716191919191900000000000000000000000000000000000000000000000000000000000600000000060000060000060000060000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919191919191919191619191919191906000000000000060000000000000006060000000000000600000000000000060600000000000000000600000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010400000f6140f6131c6141c61300605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605000000000000000
0106000010555115231c51415545245140c5130050100503005030050300503005030050300503005030050300503005030050300503005030050300503005030050300503005030050300503005030050300503
011000001c7551c71500705187551a71526705187551a7151d7551f715007051d7151f755007051d7151f7551d7551f71522715007051d7551f71522715007050070522715007051d7151c755007051c7551c715
011000201075510755000000f75510755000000f755107550f75510755000000f75510755000000f75510755107551d755000001c75500000000001e7552175500000217550000021755000001c735000001c715
011000000000000000000001c61500000000000000000000000000000000000000001a61500000000000000000000000001c6150000000000000001a61500000000001c615000000000000000000000000000000
010b00000e1350e1250e1150020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205002050020500205
0108000018754197541c7260070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
__music__
01 02420444
02 03420444

